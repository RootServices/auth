<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.tokensmith.authorization.persistence.mapper.ResourceOwnerMapper">

    <resultMap id="resourceOwner" type="net.tokensmith.repository.entity.ResourceOwner">
        <id column="id" property="id" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="net.tokensmith.authorization.persistence.mapper.typehandler.UUIDTypeHandler"/>
        <result column="email" property="email"/>
        <result column="active_password" property="password" />
        <result column="email_verified" property="emailVerified"/>
        <result column="created_at" property="createdAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="net.tokensmith.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
        <result column="updated_at" property="updatedAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="net.tokensmith.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
    </resultMap>

    <resultMap id="resourceOwnerWithProfileAndToken" type="net.tokensmith.repository.entity.ResourceOwner">
        <id column="id" property="id" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="net.tokensmith.authorization.persistence.mapper.typehandler.UUIDTypeHandler"/>
        <result column="email" property="email"/>
        <result column="active_password" property="password" />
        <result column="email_verified" property="emailVerified"/>
        <result column="created_at" property="createdAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="net.tokensmith.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>

        <association property="profile"
                     resultMap="net.tokensmith.authorization.persistence.mapper.ProfileMapper.profile"
                     columnPrefix="profile_"
                     notNullColumn="id"/>

        <association property="tokens"
                     resultMap="net.tokensmith.authorization.persistence.mapper.TokenMapper.token"
                     columnPrefix="token_"/>

        <association property="localTokens"
                     resultMap="net.tokensmith.authorization.persistence.mapper.LocalTokenMapper.localToken"
                     columnPrefix="local_token_"/>
    </resultMap>

    <insert id="insert" >
        insert into resource_owner (id, email, active_password)
        values (
            #{resourceOwner.id},
            #{resourceOwner.email},
            #{resourceOwner.password}
        )
    </insert>

    <select id="getById" resultMap="resourceOwner">
        select
            resource_owner.id,
            resource_owner.email,
            resource_owner.active_password,
            resource_owner.email_verified,
            resource_owner.created_at
        from resource_owner
        where id = #{id}
    </select>

    <select id="getByLocalToken" resultMap="resourceOwner">
        select
            resource_owner.id,
            resource_owner.email,
            resource_owner.active_password,
            resource_owner.email_verified,
            resource_owner.created_at
        from resource_owner
        join local_token on local_token.resource_owner_id = resource_owner.id
        where local_token.active_token = #{token}
        and local_token.expires_at > current_timestamp
        and local_token.revoked = false
    </select>

    <select id="getByEmail" resultMap="resourceOwner">
        select
            resource_owner.id,
            resource_owner.email,
            resource_owner.active_password,
            resource_owner.email_verified,
            resource_owner.created_at
        from resource_owner
        where email = #{email}
    </select>

    <select id="getByAccessToken" resultMap="resourceOwner">
        select
            resource_owner.id,
            resource_owner.email,
            resource_owner.active_password,
            resource_owner.email_verified,
            resource_owner.created_at
        from resource_owner
        join resource_owner_token on resource_owner_token.resource_owner_id = resource_owner.id
        join token on token.id = resource_owner_token.token_id
        where token.active_token = #{accessToken}
    </select>

    <select id="getByAccessTokenWithProfileAndTokens" resultMap="resourceOwnerWithProfileAndToken">
        select
            resource_owner.id,
            resource_owner.email,
            resource_owner.active_password,
            resource_owner.email_verified,
            resource_owner.created_at,

            token.id as token_id,
            token.revoked as token_revoked,
            token.grant_type as token_grant_type,
            token.client_id as token_client_id,
            token.lead_auth_time as token_lead_auth_time,
            token.expires_at as token_expires_at,
            token.created_at as token_created_at,

            token_scope.id as token_ts_id,
            token_scope.token_id as token_ts_token_id,
            token_scope.created_at as token_ts_created_at,
            token_scope.updated_at as token_ts_updated_at,

            scope.id as token_ts_scope_id,
            scope.name as token_ts_scope_name,
            scope.created_at as token_ts_scope_created_at,

            profile.id as profile_id,
            profile.resource_owner_id,
            profile.name as profile_name,
            profile.middle_name as profile_middle_name,
            profile.nick_name as profile_nick_name,
            profile.preferred_user_name as profile_preferred_user_name,
            profile.profile as profile_profile,
            profile.picture as profile_picture,
            profile.website as profile_website,
            profile.gender as profile_gender,
            profile.birth_date as profile_birth_date,
            profile.zone_info as profile_zone_info,
            profile.locale as profile_locale,
            profile.phone_number as profile_phone_number,
            profile.phone_number_verified as profile_phone_number_verified,
            profile.updated_at as profile_updated_at,
            profile.created_at as profile_created_at,

            address.id as profile_address_id,
            address.resource_owner_profile_id as profile_address_resource_owner_profile_id,
            address.street_address as profile_address_street_address,
            address.street_address2 as profile_address_street_address2,
            address.locality as profile_address_locality,
            address.region as profile_address_region,
            address.postal_code as profile_address_postal_code,
            address.country as profile_address_country,
            address.updated_at as profile_address_updated_at,
            address.created_at as profile_address_created_at,

            given_name.id as profile_given_name_id,
            given_name.resource_owner_profile_id as profile_given_name_resource_owner_profile_id,
            given_name.given_name as profile_given_name_given_name,
            given_name.created_at as profile_given_name_created_at,
            given_name.updated_at as profile_given_name_updated_at,

            family_name.id as profile_family_name_id,
            family_name.resource_owner_profile_id as profile_family_name_resource_owner_profile_id,
            family_name.family_name as profile_family_name_family_name,
            family_name.created_at as profile_family_name_created_at,
            family_name.updated_at as profile_family_name_updated_at,

            audience.id as token_audience_id,
            audience.redirect_uri as token_audience_redirect_uri,
            audience.created_at as token_audience_created_at

        from resource_owner

        join resource_owner_token on resource_owner_token.resource_owner_id = resource_owner.id
        join token on token.id = resource_owner_token.token_id
        join token_scope on token_scope.token_id = token.id
        join scope on scope.id = token_scope.scope_id

        left join resource_owner_profile profile on profile.resource_owner_id = resource_owner.id
        left join resource_owner_profile_address address on address.resource_owner_profile_id = profile.id
        left join resource_owner_profile_given_name given_name on given_name.resource_owner_profile_id = profile.id
        left join resource_owner_profile_family_name family_name on family_name.resource_owner_profile_id = profile.id

        join token_audience on token_audience.token_id = token.id
        join client audience on audience.id = token_audience.client_id

        where token.active_token = #{accessToken}
        and token.expires_at > current_timestamp
        and token.revoked = false
    </select>


    <select id="getByIdWithProfile" resultMap="resourceOwnerWithProfileAndToken">
        select
            resource_owner.id,
            resource_owner.email,
            resource_owner.active_password,
            resource_owner.email_verified,
            resource_owner.created_at,

            profile.id as profile_id,
            profile.resource_owner_id,
            profile.name as profile_name,
            profile.middle_name as profile_middle_name,
            profile.nick_name as profile_nick_name,
            profile.preferred_user_name as profile_preferred_user_name,
            profile.profile as profile_profile,
            profile.picture as profile_picture,
            profile.website as profile_website,
            profile.gender as profile_gender,
            profile.birth_date as profile_birth_date,
            profile.zone_info as profile_zone_info,
            profile.locale as profile_locale,
            profile.phone_number as profile_phone_number,
            profile.phone_number_verified as profile_phone_number_verified,
            profile.updated_at as profile_updated_at,
            profile.created_at as profile_created_at,

            address.id as profile_address_id,
            address.resource_owner_profile_id as profile_address_resource_owner_profile_id,
            address.street_address as profile_address_street_address,
            address.street_address2 as profile_address_street_address2,
            address.locality as profile_address_locality,
            address.region as profile_address_region,
            address.postal_code as profile_address_postal_code,
            address.country as profile_address_country,
            address.updated_at as profile_address_updated_at,
            address.created_at as profile_address_created_at,

            given_name.id as profile_given_name_id,
            given_name.resource_owner_profile_id as profile_given_name_resource_owner_profile_id,
            given_name.given_name as profile_given_name_given_name,
            given_name.created_at as profile_given_name_created_at,
            given_name.updated_at as profile_given_name_updated_at,

            family_name.id as profile_family_name_id,
            family_name.resource_owner_profile_id as profile_family_name_resource_owner_profile_id,
            family_name.family_name as profile_family_name_family_name,
            family_name.created_at as profile_family_name_created_at,
            family_name.updated_at as profile_family_name_updated_at

        from resource_owner

        left join local_token on local_token.resource_owner_id = resource_owner.id
        left join resource_owner_profile profile on profile.resource_owner_id = resource_owner.id
        left join resource_owner_profile_address address on address.resource_owner_profile_id = profile.id
        left join resource_owner_profile_given_name given_name on given_name.resource_owner_profile_id = profile.id
        left join resource_owner_profile_family_name family_name on family_name.resource_owner_profile_id = profile.id

        where resource_owner.id = #{id}
    </select>

    <update id="setEmailVerified">
        update resource_owner
        set
            email_verified = true,
            updated_at = now()
        where id = #{id}
    </update>

    <update id="updatePassword">
        update resource_owner
        set
            active_password = #{password},
            updated_at = now()
        where id = #{id}
    </update>

    <update id="updateEmail">
        update resource_owner
        set
            email = #{email},
            email_verified = false,
            updated_at = now()
        where id = #{id}
    </update>

</mapper>