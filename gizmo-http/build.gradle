plugins {
    id 'java'
    id 'maven'
    id 'org.flywaydb.flyway' version '6.0.3'
    id 'war'
}

group = 'org.rootservices'
version = '1.0-SNAPSHOT'

description = """gizmo-http"""

sourceCompatibility = 12
targetCompatibility = 12

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}


repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "http://repo.maven.apache.org/maven2" }
    mavenCentral()
    mavenLocal()
}

ext {
    servletApiVersion = '4.0'
    springVersion = '5.1.2.RELEASE'
    jacksonVersion = '2.9.10'
    log4jVersion = '2.12.1'
    jwtVersion = '1.3.1'
    bcryptVersion = "0.4"
    mybatisVersion = '3.5.2'
    mybatisSpringVersion = '2.0.2'
    jUnitVersion = '4.12'
    mockitoVersion = '3.0.0'

    mainClass = 'org.rootservices.authorization.http.server.GizmoServer'
    pathToJavaMain = "$buildDir/classes/java/main/"
}


dependencies {
    compile project (':gizmo')

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: "${servletApiVersion}"
    compile group: 'org.rootservices', name: 'otter', version:'1.4.1'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    compile group: 'org.springframework', name: 'spring-context', version: "${springVersion}"
    compile(group: 'org.springframework', name: 'spring-jdbc', version: "${springVersion}") {
        exclude(module: 'commons-logging')
    }

    // what is ths used for?
    compile(group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot', version: '1.3.1-SNAPSHOT')

    compile group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"
    compile group: 'org.rootservices', name: 'jwt', version:'1.3.1'
    compile 'commons-httpclient:commons-httpclient:3.1'

    testCompile group: 'junit', name: 'junit', version:"${jUnitVersion}"
    testCompile group: 'org.mockito', name: 'mockito-core', version:"${mockitoVersion}"
    testCompile group: 'com.ning', name: 'async-http-client', version:'1.9.15'
}

test {
    mkdir 'logs/jetty'
    filter {
        includeTestsMatching "*IntegrationTestSuite"
        includeTestsMatching "*UnitTestSuite"
    }
}

configurations {
    executableWarDeps
}

war {
    from "${pathToJavaMain}"
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
    manifest {
        attributes 'Main-Class': "${mainClass}"
    }
    from {
        configurations.executableWarDeps.collect { it.isDirectory() ? it : project.zipTree(it) }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    // having trouble expolding the war file.
    exclude "license/LICENSE*.txt"
    exclude "license/README*.txt"

}
