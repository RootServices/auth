<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rootservices.authorization.persistence.mapper.AuthCodeMapper">

    <resultMap id="authCode" type="org.rootservices.authorization.persistence.entity.AuthCode">
        <id column="uuid" property="uuid" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.UUIDTypeHandler"/>
        <result column="code" property="code" javaType="byte[]" jdbcType="BINARY" typeHandler="org.apache.ibatis.type.ByteArrayTypeHandler"/>
        <result column="revoked" property="revoked" javaType="Boolean"/>
        <result column="expires_at" property="expiresAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
        <result column="created_at" property="createdAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
        <association property="accessRequest"
                     resultMap="org.rootservices.authorization.persistence.mapper.AccessRequestMapper.accessRequest"
                     columnPrefix="ar_"/>
    </resultMap>

    <insert id="insert" >
        insert into auth_code (uuid, code, revoked, access_request_uuid, expires_at)
        values (
            #{authCode.uuid},
            #{authCode.code},
            #{authCode.revoked},
            #{authCode.accessRequest.uuid},
            #{authCode.expiresAt, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler}
        )
    </insert>

    <select id="getByClientUUIDAndAuthCodeAndNotRevoked" resultMap="authCode">
        select
            auth_code.uuid,
            auth_code.expires_at,
            auth_code.created_at,
            auth_code.revoked,

            ar.uuid as ar_uuid,
            ar.redirect_uri as ar_redirect_uri,
            ar.created_at as ar_created_at,

            ars.uuid as ar_ars_uuid,

            scope.uuid as ar_ars_scope_uuid,
            scope.name as ar_ars_scope_name,
            scope.created_at as ar_ars_scope_created_at

        from auth_code
        join access_request ar on ar.uuid = auth_code.access_request_uuid
        left join access_request_scopes ars on ars.access_request_uuid = ar.uuid
        left join scope on scope.uuid = ars.scope_uuid
        where ar.client_uuid = #{clientUUID}
        and auth_code.code = decode(#{code}, 'escape')
        and auth_code.expires_at > current_timestamp
        and auth_code.revoked = FALSE
    </select>

</mapper>
