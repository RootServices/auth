<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rootservices.authorization.persistence.mapper.RSAPrivateKeyMapper">

    <resultMap id="rsaPrivateKey" type="org.rootservices.authorization.persistence.entity.RSAPrivateKey">
        <id column="id" property="id" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.UUIDTypeHandler"/>
        <result column="use" property="use" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result column="modulus" property="modulus" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="public_exponent" property="publicExponent" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="private_exponent" property="privateExponent" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="prime_p" property="primeP" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="prime_q" property="primeQ" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="prime_exponent_p" property="primeExponentP" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="prime_exponent_q" property="primeExponentQ" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="crt_coefficient" property="crtCoefficient" javaType="java.math.BigInteger" jdbcType="BINARY" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler"/>
        <result column="active" property="active" />
        <result column="created_at" property="createdAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
        <result column="updated_at" property="updatedAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
    </resultMap>

    <insert id="insert">
        insert into rsa_private_key
        (
            id,
            use,
            modulus,
            public_exponent,
            private_exponent,
            prime_p,
            prime_q,
            prime_exponent_p,
            prime_exponent_q,
            crt_coefficient,
            active
        )
        values (
            #{rsaPrivateKey.id},
            #{rsaPrivateKey.use, typeHandler=org.apache.ibatis.type.EnumTypeHandler},
            #{rsaPrivateKey.modulus, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.publicExponent, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.privateExponent, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeP, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeQ, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeExponentP, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeExponentQ, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.crtCoefficient, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.active}
        )
    </insert>

    <insert id="insertWithDateTimeValues">
        insert into rsa_private_key
        (
            id,
            use,
            modulus,
            public_exponent,
            private_exponent,
            prime_p,
            prime_q,
            prime_exponent_p,
            prime_exponent_q,
            crt_coefficient,
            active,
            created_at,
            updated_at
        )
        values (
            #{rsaPrivateKey.id},
            #{rsaPrivateKey.use, typeHandler=org.apache.ibatis.type.EnumTypeHandler},
            #{rsaPrivateKey.modulus, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.publicExponent, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.privateExponent, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeP, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeQ, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeExponentP, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.primeExponentQ, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.crtCoefficient, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.BigIntegerToBytesTypeHandler},
            #{rsaPrivateKey.active},
            #{rsaPrivateKey.createdAt, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler},
            #{rsaPrivateKey.updatedAt, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler}
        )
    </insert>

    <select id="getMostRecentAndActiveForSigning" resultMap="rsaPrivateKey">
        select
            id,
            use,
            modulus,
            public_exponent,
            private_exponent,
            prime_p,
            prime_q,
            prime_exponent_p,
            prime_exponent_q,
            crt_coefficient,
            active,
            updated_at,
            created_at
        from rsa_private_key
        where active=true and use='SIGNATURE'
        order by created_at desc
        limit 1
    </select>

    <select id="getById" resultMap="rsaPrivateKey">
        select
            id,
            use,
            modulus,
            public_exponent,
            private_exponent,
            prime_p,
            prime_q,
            prime_exponent_p,
            prime_exponent_q,
            crt_coefficient,
            active,
            updated_at,
            created_at
        from rsa_private_key
        where id = #{id}
    </select>

    <select id="getWhereActiveAndUseIsSign" resultMap="rsaPrivateKey">
        select
            id,
            use,
            modulus,
            public_exponent,
            private_exponent,
            prime_p,
            prime_q,
            prime_exponent_p,
            prime_exponent_q,
            crt_coefficient,
            active,
            updated_at,
            created_at
        from rsa_private_key
        where active=true and use='SIGNATURE'
        order by created_at desc
        limit #{limit} offset #{offset}
    </select>
</mapper>