<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rootservices.authorization.persistence.mapper.ClientMapper">

    <resultMap id="client" type="org.rootservices.authorization.persistence.entity.Client">
        <id column="id" property="uuid" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.UUIDTypeHandler"/>
        <result column="redirect_uri" property="redirectURI" javaType="java.net.URI" jdbcType="VARCHAR" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.URITypeHandler"/>
        <result column="created_at" property="createdAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
        <collection property="scopes"
                    resultMap="org.rootservices.authorization.persistence.mapper.ScopeMapper.scope"
                    columnPrefix="scope_"
                    javaType="ArrayList"/>
        <collection property="responseTypes"
                    resultMap="org.rootservices.authorization.persistence.mapper.ResponseTypeMapper.responseType"
                    columnPrefix="response_type_"
                    javaType="ArrayList"/>
    </resultMap>

    <insert id="insert">
        insert into client (id, redirect_URI)
        values (
            #{client.uuid},
            #{client.redirectURI,  typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.URITypeHandler}
        )
    </insert>

    <select id="getByUUID" resultMap="client">
        select
            client.id,
            client.redirect_uri,
            client.created_at,
            scope.id as scope_id,
            scope.name as scope_name,
            scope.created_at as scope_created_at,
            response_type.id as response_type_id,
            response_type.name as response_type_name,
            response_type.created_at as response_type_created_at,
            response_type.updated_at as response_type_updated_at
        from client
        join client_scopes on client_scopes.client_id = client.id
        join scope on scope.id = client_scopes.scope_id
        join client_response_type on client_response_type.client_id = client.id
        join response_type on response_type.id = client_response_type.response_type_id
        where client.id = #{uuid}
    </select>

</mapper>