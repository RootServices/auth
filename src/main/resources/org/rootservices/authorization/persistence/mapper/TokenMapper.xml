<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.rootservices.authorization.persistence.mapper.TokenMapper">

    <resultMap id="token" type="org.rootservices.authorization.persistence.entity.Token">
        <id column="id" property="id" javaType="java.util.UUID" jdbcType="OTHER" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.UUIDTypeHandler"/>
        <result column="token" property="token"/>
        <result column="revoked" property="revoked"/>
        <result column="grant_type" property="grantType" typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result column="expires_at" property="expiresAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>
        <result column="created_at" property="createdAt" javaType="java.time.OffsetDateTime" jdbcType="DATE" typeHandler="org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler"/>

        <collection property="tokenScopes"
                    resultMap="org.rootservices.authorization.persistence.mapper.TokenScopeMapper.tokenScope"
                    columnPrefix="ts_"
                    javaType="ArrayList"/>
    </resultMap>

    <select id="getByAuthCodeId" resultMap="token">
        select
            token.id,
            token.token,
            token.revoked,
            token.grant_type,
            token.expires_at,
            token.created_at
        from token
        join auth_code_token on auth_code_token.token_id = token.id
        where auth_code_token.auth_code_id = #{authCodeId}
    </select>

    <select id="getById" resultMap="token">
        select
            token.id,
            token.token,
            token.revoked,
            token.grant_type,
            token.expires_at,
            token.created_at
        from token
        where token.id = #{id}
    </select>

    <insert id="insert" >
        insert into token (id, token, grant_type, expires_at)
        values (
            #{token.id},
            #{token.token},
            #{token.grantType},
            #{token.expiresAt, typeHandler=org.rootservices.authorization.persistence.mapper.typehandler.OffsetDateTimeTypeHandler}
        )
    </insert>

    <update id="revokeByAuthCodeId">
        update token
        set revoked = true
        from auth_code_token, auth_code
        where auth_code_token.token_id = token.id
        and auth_code.id = auth_code_token.auth_code_id
        and auth_code.id = #{authCodeId}
    </update>

    <update id="revokeById">
        update token
        set revoked = true
        where id = #{id}
    </update>

    <update id="updateExpiresAtByAccessToken">
        update token
        set expires_at = #{expiresAt}
        where token = decode(#{accessToken}, 'escape')
    </update>

</mapper>